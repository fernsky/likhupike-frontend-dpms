@use "@carbon/styles/scss/spacing" as *;
@use "@carbon/styles/scss/type" as *;
@use "@carbon/styles/scss/theme" as *;
@use "@carbon/styles/scss/breakpoint" as *;
@use "@carbon/styles/scss/motion" as *;

// Define missing Carbon motion variables if needed
$duration--moderate-01: 150ms;
$carbon--standard-easing: cubic-bezier(0.2, 0, 0.38, 0.9);
$carbon--entrance-easing: cubic-bezier(0, 0, 0.38, 0.9);
$carbon--exit-easing: cubic-bezier(0.2, 0, 1, 0.9);
$border-subtle-hover: $border-subtle; // Define border-subtle-hover

// Define the motion mixin if it's not available
@function motion($name, $mode) {
  @if $name == "standard" {
    @return $carbon--standard-easing;
  } @else if $name == "entrance" {
    @return $carbon--entrance-easing;
  } @else if $name == "exit" {
    @return $carbon--exit-easing;
  } @else {
    @return $carbon--standard-easing;
  }
}

.cds--form {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: $spacing-07;
  margin-bottom: $spacing-09;

  .cds--form-section {
    background-color: $layer-01;
    border-radius: 4px;
    border: 1px solid $border-subtle;
    padding: $spacing-05 $spacing-05 $spacing-07;
    transition: all 110ms $duration--moderate-01 motion(standard, productive);

    h3 {
      display: flex;
      align-items: center;
      gap: $spacing-03;
      margin-bottom: $spacing-06;
      color: $text-primary;
      position: relative;
      padding-bottom: $spacing-03;
      border-bottom: 1px solid $border-subtle;

      .cds--section-icon {
        color: $icon-primary;
        font-size: 20px;
        width: 20px;
        height: 20px;
      }
    }
  }

  .cds--form-item {
    margin-bottom: $spacing-06;

    cds-label {
      margin-bottom: $spacing-03;
      color: $text-primary;

      ::ng-deep .cds--label {
        @include type-style("body-short-01");
        font-weight: 400;
      }

      ::ng-deep .cds--form__helper-text {
        @include type-style("helper-text-01");
        color: $text-secondary;
        margin-top: $spacing-02;
      }
    }
  }

  .cds--text-input__field-wrapper {
    position: relative;
    transition: all 110ms $duration--moderate-01 motion(standard, productive);

    &:focus-within {
      transform: translateY(-1px);
    }

    input[cdsText] {
      height: $spacing-09;
      transition: all 110ms $duration--moderate-01 motion(standard, productive);

      &:hover:not([disabled]) {
        background-color: var(--cds-field-hover, $field-hover);
      }

      &:focus {
        border-color: var(--cds-focus, $focus);
      }
    }

    .cds--text-input__password-visibility-toggle {
      position: absolute;
      right: 0;
      top: 0;
      height: 100%;
      display: flex;
      align-items: center;
      padding: 0 $spacing-04;
      transition: color 110ms $duration--moderate-01
        motion(standard, productive);

      &:hover {
        color: var(--cds-text-01, $text-primary);
      }

      mat-icon {
        font-size: 20px;
      }
    }
  }

  .cds--basic-info {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: $spacing-05;

    @include breakpoint-down("md") {
      grid-template-columns: 1fr;
    }
  }

  .cds--ward-level-section {
    grid-column: 1 / -1;
    margin-top: $spacing-05;
    padding: $spacing-05;
    background-color: var(--cds-layer-accent, $layer-accent);
    border-radius: 4px;
    transition: all 150ms $duration--moderate-01 motion(standard, productive);
    border: 1px solid var(--cds-border-subtle-01, $border-subtle);

    &:hover {
      border-color: var(--cds-border-subtle, $border-interactive);
    }

    .cds--ward-level-checkbox {
      font-weight: 500;
      display: block;
      margin-bottom: $spacing-03;
    }

    .cds--ward-dropdown-container {
      margin-top: $spacing-05;
      max-width: 400px;

      cds-dropdown {
        width: 100%;
        margin-top: $spacing-03;

        ::ng-deep button.cds--list-box__field {
          transition: all 110ms $duration--moderate-01
            motion(standard, productive);

          &:hover:not([disabled]) {
            background-color: var(--cds-field-hover, $field-hover);
          }
        }
      }
    }
  }

  .cds--permissions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: $spacing-05;

    .cds--permission-item {
      background: var(--cds-layer-accent, $layer-accent);
      border-radius: 4px;
      padding: $spacing-05;
      border: 1px solid var(--cds-border-subtle-01, $border-subtle);
      transition: all 150ms $duration--moderate-01 motion(standard, productive);

      &:hover {
        border-color: var(--cds-border-subtle, $border-interactive);
        transform: translateY(-2px);
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      }

      .cds--permission-label {
        display: flex;
        flex-direction: column;
        gap: $spacing-02;

        .cds--permission-name {
          @include type-style("heading-compact-01");
          color: var(--cds-text-01, $text-primary);
        }

        .cds--permission-description {
          @include type-style("body-compact-01");
          color: var(--cds-text-02, $text-secondary);
          line-height: 1.4;
        }
      }
    }
  }

  .cds--form-error {
    margin: $spacing-05 0;
    animation: fadeIn 240ms $duration--moderate-01 motion(standard, productive);

    .cds--inline-notification {
      border-width: 1px;
      border-left-width: 3px;
      max-width: 100%;

      .cds--inline-notification__details {
        padding: $spacing-04 $spacing-05;
      }

      .cds--inline-notification__icon {
        color: var(--cds-support-error, $support-error);
      }
    }
  }

  .cds--form-actions {
    display: flex;
    justify-content: flex-end;
    gap: $spacing-05;
    margin-top: $spacing-07;
    padding-top: $spacing-05;
    border-top: 1px solid var(--cds-border-subtle-01, $border-subtle);

    button {
      position: relative;
      overflow: hidden;
      transition: all 150ms $duration--moderate-01 motion(standard, productive);

      &:not(:disabled):hover {
        transform: translateY(-1px);
      }

      &:not(:disabled):active {
        transform: translateY(0);
      }

      .cds--btn__icon {
        display: flex;
        align-items: center;
        justify-content: center;
        transition: transform 150ms $duration--moderate-01
          motion(standard, productive);
      }

      &:not(:disabled):hover .cds--btn__icon {
        transform: translateX(2px);
      }
    }
  }
}

.cds--form-requirement {
  color: var(--cds-support-error, $support-error);
  font-size: 12px;
  margin-top: $spacing-03;
  animation: slideIn 240ms $duration--moderate-01 motion(standard, productive);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@include breakpoint-down("md") {
  .cds--form {
    gap: $spacing-05;

    .cds--form-actions {
      gap: $spacing-03;
    }

    .cds--permissions-grid {
      grid-template-columns: 1fr;
      gap: $spacing-03;
    }
  }
}

@include breakpoint-down("sm") {
  .cds--form {
    gap: $spacing-04;

    .cds--form-section {
      padding: $spacing-04;
    }

    .cds--form-actions {
      flex-direction: column-reverse;
      gap: $spacing-03;

      button {
        width: 100%;
      }
    }
  }
}
