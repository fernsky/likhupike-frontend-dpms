@use "@carbon/styles/scss/spacing" as spacing;
@use "@carbon/styles/scss/type" as type;
@use "@carbon/styles/scss/breakpoint" as breakpoint;
@use "@carbon/styles/scss/theme" as theme;
@use "@carbon/styles/scss/motion" as motion;
@use "@carbon/styles/scss/components/form" as form;
@use "@carbon/styles/scss/components/button" as button;
@use "@carbon/styles/scss/components/notification" as notification;
@use "@carbon/styles/scss/components/checkbox" as checkbox;
@use "@carbon/styles/scss/components/dropdown" as dropdown;

// Register container with clean Carbon styling
.cds--register-container {
  width: 100%;
  max-width: 480px;
  margin: 2rem auto;
  padding: spacing.$spacing-07;
  background: linear-gradient(
    135deg,
    var(--cds-background) 0%,
    var(--cds-layer-01) 100%
  );
  border: 1px solid var(--cds-border-subtle);
  border-radius: 4px;
  backdrop-filter: blur(10px);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(
      90deg,
      var(--cds-interactive-01),
      var(--cds-interactive-02)
    );
  }

  h1 {
    @include type.type-style("heading-05");
    color: var(--cds-text-primary);
    margin-bottom: spacing.$spacing-05;
    font-weight: 600;
    letter-spacing: -0.5px;
    position: relative;
    display: inline-block;

    &::after {
      content: "";
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 40px;
      height: 4px;
      background: linear-gradient(
        90deg,
        var(--cds-interactive-01),
        var(--cds-interactive-02)
      );
      border-radius: 2px;
    }
  }

  .cds--register-subtitle {
    @include type.type-style("body-long-02");
    color: var(--cds-text-secondary);
    margin-bottom: spacing.$spacing-07;
    opacity: 0.9;
    max-width: 90%;
    line-height: 1.5;
  }
}

// Form styling with Carbon tokens
.cds--form {
  max-width: 100%;

  // Adjust spacing between form items
  .cds--form-item {
    margin-bottom: spacing.$spacing-06;

    @include breakpoint.breakpoint(md) {
      margin-bottom: spacing.$spacing-05;
    }

    // Improve spacing for nested form items
    .cds--form-item {
      margin-bottom: spacing.$spacing-03;
    }
  }

  // Input field wrapper styling - matched with other components
  .cds--text-input__field-wrapper {
    position: relative;

    .cds--text-input__icon.mat-icon {
      position: absolute;
      left: spacing.$spacing-04;
      top: 50%;
      transform: translateY(-50%);
      color: var(--cds-text-03); // Use text-03 for subtle icon color
      font-size: 20px;
      height: 20px;
      width: 20px;
    }

    // Add padding for the icon and consistent height
    input[cdsText] {
      padding-left: spacing.$spacing-08;
      height: spacing.$spacing-09;
      color: var(--cds-text-01); // Ensure input text has proper color
    }

    // Password visibility toggle button
    .cds--text-input__password-visibility-toggle {
      position: absolute;
      right: 0;
      top: 0;
      height: 100%;
      display: flex;
      align-items: center;
      padding: 0 spacing.$spacing-04;

      .mat-icon {
        color: var(--cds-text-03);
        font-size: 20px;
        height: 20px;
        width: 20px;
      }
    }
  }
}

// Ward level section styling - using Carbon layering
.cds--ward-level-section {
  margin: spacing.$spacing-05 0;
  padding: spacing.$spacing-05;
  background: linear-gradient(
    135deg,
    var(--cds-layer-01) 0%,
    var(--cds-background) 100%
  );
  border: 1px solid var(--cds-border-subtle);
  border-radius: 4px;
  position: relative;
  transition: all 0.2s ease;
  backdrop-filter: blur(5px);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 3px;
    height: 100%;
    background: linear-gradient(
      180deg,
      var(--cds-interactive-01),
      var(--cds-interactive-02)
    );
    border-radius: 2px;
  }

  // Proper spacing of checkbox
  cds-checkbox {
    display: block;
    margin-bottom: spacing.$spacing-05;

    .cds--checkbox-label {
      display: flex;
      align-items: center;
    }

    .cds--checkbox-label-text {
      padding-left: spacing.$spacing-03;
      color: var(--cds-text-01); // Use text-01 for checkbox label
    }
  }

  // Dropdown styling and spacing
  cds-dropdown {
    width: 100%;
    display: block;
    margin-top: spacing.$spacing-03;

    // Reset the dropdown button width
    ::ng-deep .cds--list-box__field {
      width: 100%;
    }
  }

  // Helper text styling
  .cds--form__helper-text {
    margin-top: spacing.$spacing-03;
    font-size: 0.75rem;
    line-height: 1.34;
    color: var(--cds-text-helper);
  }

  @include breakpoint.breakpoint(md) {
    padding: spacing.$spacing-04;
  }
}

// Error notification styling
.cds--register-error {
  margin: spacing.$spacing-05 0;
  animation: slideIn 0.3s cubic-bezier(0.2, 0, 0.38, 0.9);

  // Improve notification appearance
  .cds--inline-notification {
    width: 100%;
    max-width: 100%;
    text-align: left;
  }

  .cds--inline-notification__details {
    margin: spacing.$spacing-03;
  }

  .cds--inline-notification__icon {
    margin-right: spacing.$spacing-04;
    color: var(--cds-support-01); // Carbon's error color
  }
}

// Submit button container
.cds--register-submit {
  margin-top: spacing.$spacing-07;

  button {
    width: 100%;
    min-height: 48px;
    border: none;
    transition: all 0.3s cubic-bezier(0.2, 0, 0.38, 0.9);
    position: relative;
    overflow: hidden;

    &::after {
      content: "";
      position: absolute;
      inset: 0;
      background: radial-gradient(
        circle at 50% 0%,
        rgba(255, 255, 255, 0.2),
        transparent 70%
      );
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    &:hover:not([disabled]) {
      transform: translateY(-2px);
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);

      &::after {
        opacity: 1;
      }
    }

    .cds--btn__icon {
      margin-right: spacing.$spacing-03;
      display: flex;
      align-items: center;

      .mat-icon {
        font-size: 20px;
        height: 20px;
        width: 20px;
      }
    }
  }
}

// Footer links styling
.cds--register-footer {
  margin-top: spacing.$spacing-07;
  padding-top: spacing.$spacing-05;
  border-top: 1px solid var(--cds-border-subtle);
  text-align: center;

  .cds--have-account-link {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: spacing.$spacing-03;
    color: var(--cds-text-02);

    a {
      position: relative;
      color: var(--cds-link-01);
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;

      &::after {
        content: "";
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 100%;
        height: 1px;
        background: linear-gradient(
          90deg,
          var(--cds-interactive-01),
          var(--cds-interactive-02)
        );
        transform: scaleX(0);
        transition: transform 0.2s ease;
        transform-origin: right;
      }

      &:hover {
        color: var(--cds-link-hover);

        &::after {
          transform: scaleX(1);
          transform-origin: left;
        }
      }
    }
  }
}

// Button specific styles - fix for rgb(15, 98, 254) issue
button[cdsButton] {
  // Ensure the button uses Carbon token, not hard-coded colors
  &:not([disabled]) {
    background-color: var(
      --cds-button-primary
    ) !important; // Use button-primary token
    color: var(--cds-text-on-color) !important; // Use text-on-color token
  }

  &:hover:not([disabled]) {
    background-color: var(
      --cds-button-primary-hover
    ) !important; // Use hover token
  }

  // For ghost buttons used in password visibility
  &[cdsButton="ghost"] {
    background-color: transparent !important;
    color: var(--cds-link-01) !important;

    &:hover {
      background-color: var(--cds-hover-ui) !important;
    }
  }
}

// Checkbox styling
::ng-deep cds-checkbox .cds--checkbox-label::before {
  border-color: var(--cds-ui-04) !important; // More visible border
}

::ng-deep cds-checkbox input:checked ~ .cds--checkbox-label::before {
  background-color: var(--cds-button-primary) !important;
  border-color: var(--cds-button-primary) !important;
}

::ng-deep cds-checkbox .cds--checkbox-label-text {
  color: var(--cds-text-01) !important; // More readable label text
}

// Override Carbon form label styling for better readability
::ng-deep cds-label .cds--label {
  color: var(--cds-label-01); // Use label-01 token for better contrast
  font-weight: 500; // Medium weight for better readability
}

::ng-deep .cds--form__helper-text {
  color: var(--cds-text-helper); // Use text-helper token for helper text
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
