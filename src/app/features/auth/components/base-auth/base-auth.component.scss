@use "@carbon/styles/scss/spacing" as spacing;
@use "@carbon/styles/scss/type" as type;
@use "@carbon/styles/scss/breakpoint" as breakpoint;
@use "@carbon/styles/scss/grid" as grid;
@use "@carbon/styles/scss/motion" as motion;
@use "@carbon/styles/scss/theme" as theme;
@use "@carbon/styles/scss/config" as config;

:host {
  display: block;
  height: 100%;
}

// Main container with Carbon background color
.cds--auth-container {
  position: relative;
  min-height: 100%;
  display: flex;
  flex-direction: column;
  background-color: var(--cds-background);
  color: var(--cds-text-01);

  // Carbon-style subtle gradient for visual interest
  background-image: linear-gradient(
    to bottom,
    var(--cds-background),
    var(--cds-layer-01)
  );
}

// Header styling with Carbon tokens
.cds--auth-header {
  position: relative;
  z-index: 3;
  background-color: var(--cds-layer);
  border-bottom: 1px solid var(--cds-border-subtle);
  padding: spacing.$spacing-04 0;

  app-gov-branding {
    display: block;
    max-width: 1584px; // Carbon's max container width
    margin: 0 auto;
    padding: 0 spacing.$spacing-05;

    @include breakpoint.breakpoint(md) {
      padding: 0 spacing.$spacing-06;
    }

    @include breakpoint.breakpoint(lg) {
      padding: 0 spacing.$spacing-07;
    }
  }
}

// Main content area with Carbon grid and spacing
.cds--auth-content {
  flex: 1;
  padding: spacing.$spacing-09 0;
  display: flex;
  align-items: center;

  @include breakpoint.breakpoint(md) {
    padding: spacing.$spacing-08 0;
  }

  @include breakpoint.breakpoint(sm) {
    padding: spacing.$spacing-07 0;
  }

  .cds--grid {
    width: 100%;
  }
}

// Features section (left side)
.cds--auth-features {
  @include breakpoint.breakpoint(md) {
    display: none;
  }
}

// Form container (right side)
.cds--auth-form-container {
  display: flex;
  justify-content: center;
}

.cds--auth-form-wrapper {
  width: 100%;
  max-width: 480px;
  background-color: var(--cds-layer);
  border: 1px solid var(--cds-border-subtle);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);

  // Use Carbon motion tokens for transitions
  transition:
    transform motion.$duration-moderate-01 motion.$standard-easing,
    box-shadow motion.$duration-moderate-01 motion.$standard-easing;

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
}

// Ensure responsive layout
@include breakpoint.breakpoint(md) {
  .cds--auth-form-wrapper {
    max-width: 100%;
  }
}
